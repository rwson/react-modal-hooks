{"version":3,"file":"react-modal-better-hooks.cjs.production.min.js","sources":["../../src/constants.ts","../../src/reducer.ts","../../src/context.tsx","../../src/wrapped.tsx","../../node_modules/regenerator-runtime/runtime.js","../../src/register.tsx","../../src/hooks.tsx"],"sourcesContent":["export enum ModalActionType {\n  OpenModal = 'OpenModal',\n  CloseModal = 'CloseModal',\n  CloseAllModals = 'CloseAllModals',\n  RemoveModal = 'RemoveModal',\n  AddLazyModal = 'AddLazyModal',\n  LazyModalLoaded = 'LazyModalLoaded',\n}\n","import { ModalActionType } from './constants';\nimport { Importer } from './register';\nimport produce from 'immer';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { ComponentType } from 'react';\nimport { isEqual } from 'lodash';\n\nexport const initialState = new Map();\n\nexport const reducer = produce(\n  (state: ModalStateMap, action: Actions): ModalStateMap => {\n    const { id: payloadId, props: payloadProps, loader, component, loadFailed, loaded } = action.payload ?? {};\n    const allKeys: Array<string> = Array.from(state.keys());\n    const registed: boolean = state.has(payloadId);\n\n    let currentModal: ModalItem | undefined = state.get(payloadId);\n\n    switch (action.type) {\n      case ModalActionType.OpenModal:\n        if (registed) {\n          if (currentModal) {\n            currentModal.opened = true;\n            currentModal.props = payloadProps;\n          }\n        } else {\n          currentModal = Object.assign({}, action.payload, {\n            opened: true,\n          });\n        }\n\n        state.set(payloadId, currentModal as ModalItem);\n        return state;\n\n      case ModalActionType.CloseModal:\n        if (currentModal) {\n          currentModal.opened = false;\n          state.set(payloadId, currentModal);\n        }\n        return state;\n\n      case ModalActionType.CloseAllModals:\n        allKeys.forEach((key: string) => {\n          currentModal = state.get(key) as ModalItem;\n          currentModal.opened = false;\n          state.set(key, currentModal);\n        });\n        return state;\n\n      case ModalActionType.AddLazyModal:\n        if (!registed) {\n          state.set(payloadId, {\n            id: payloadId,\n            loaded: false,\n            isLazy: true,\n            loadFailed: false,\n            loader,\n          } as ModalItem);\n        }\n        return state;\n\n      case ModalActionType.LazyModalLoaded:\n        if (currentModal) {\n          currentModal.loaded = loaded;\n          currentModal.loadFailed = loadFailed;\n          currentModal.component = component;\n          state.set(payloadId, currentModal as ModalItem);\n        }\n\n        return state;\n\n      default:\n        return state;\n    }\n  }\n);\n\nexport interface CloseModalParams {\n  id: string;\n}\n\nexport interface OpenModalParams {\n  id: string;\n  props?: {\n    [key: string]: any;\n  };\n}\n\nexport interface AddLazyModalParams {\n  id: string;\n  isLazy?: boolean;\n  loaded?: boolean;\n  loadFailed?: boolean;\n  loader?: Importer;\n  component?: ComponentType | any;\n  props?: {\n    [key: string]: any;\n  };\n}\n\nexport interface CloseAllModalParams {}\n\nexport type ActionsMap = {\n  [ModalActionType.OpenModal]: OpenModalParams;\n  [ModalActionType.AddLazyModal]: AddLazyModalParams;\n  [ModalActionType.LazyModalLoaded]: AddLazyModalParams;\n  [ModalActionType.CloseModal]: CloseModalParams;\n  [ModalActionType.RemoveModal]: CloseModalParams;\n  [ModalActionType.CloseAllModals]: any;\n};\n\nexport type Actions = {\n  [Key in keyof ActionsMap]: {\n    type: Key;\n    payload: ActionsMap[Key];\n  };\n}[keyof ActionsMap];\n\nexport type ModalItem = {\n  id: string;\n  opened: boolean;\n  isLazy?: boolean;\n  loaded?: boolean;\n  loadFailed?: boolean;\n  visible?: boolean;\n  loader?: Importer;\n  component?: ComponentType | any;\n  props?: {\n    [key: string]: any;\n  };\n};\n\nexport type ModalStateMap = Map<string, ModalItem>;\n","import {\n  reducer,\n  initialState,\n  ModalStateMap,\n  Actions,\n  ActionsMap,\n} from './reducer';\nimport React, {\n  createContext,\n  useReducer,\n  useCallback,\n  useContext,\n} from 'react';\n\nexport type Dispatcher = <\n  Type extends Actions['type'],\n  Payload extends ActionsMap[Type]\n>(\n  type: Type | any,\n  ...payload: Payload extends undefined ? [undefined?] : [Payload] | any\n) => void;\n\nconst ModalContext = createContext<{\n  state: ModalStateMap;\n  dispatch: Dispatcher;\n  defaultProps: any;\n}>({\n  state: initialState,\n  dispatch: () => undefined,\n  defaultProps: {},\n});\n\nModalContext.displayName = 'RHMBContext';\n\nexport const ModalProvider = ({ children, defaultProps = {} }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  //  @ts-ignore\n  const dispatchAction: Dispatcher = useCallback((type, payload) => {\n    dispatch({ type, payload });\n  }, []);\n\n  const value = {\n    state,\n    defaultProps,\n    dispatch: dispatchAction,\n  };\n\n  return (\n    <ModalContext.Provider value={value}>{children}</ModalContext.Provider>\n  );\n};\n\nexport const useModalContext = (): {\n  state: ModalStateMap;\n  dispatch: Dispatcher;\n  defaultProps: any;\n} => useContext(ModalContext);\n","import React, { memo, FC, ReactElement } from 'react';\nimport isEqual from 'lodash/isEqual';\n\ntype WrappedModalComponentProps = {\n  renderIfClosed?: boolean;\n  opened: boolean;\n  render: (props: any) => any;\n  modalProps: {\n    [key: string]: any;\n  };\n};\n\nconst WrappedModalComponent: FC<WrappedModalComponentProps> = ({\n  render,\n  modalProps,\n  opened,\n  renderIfClosed,\n}: WrappedModalComponentProps): ReactElement | null => {\n  if (!opened && !renderIfClosed) {\n    return null;\n  }\n\n  return <>{render(modalProps)}</>;\n};\n\nexport default memo(WrappedModalComponent, isEqual);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { ModalActionType } from './constants';\nimport { useModalContext } from './context';\nimport React, {\n  ComponentType,\n  useEffect,\n  useCallback,\n  PropsWithChildren,\n} from 'react';\n\nexport type Importer<T = any> = () => Promise<{\n  default: ComponentType<PropsWithChildren<T>>;\n}>;\n\nexport type LazyModalItem = {\n  loader: Importer;\n};\n\nconst moduleLoader = (importer: Importer) => async () => {\n  const module = await importer();\n  return module;\n};\n\nexport function withModals<T = any>(\n  Component: ComponentType<PropsWithChildren<T>>\n) {\n  return (modals: RegisterModalsParams) => (props: T) => {\n    const { dispatch, state } = useModalContext();\n\n    const loadModal = useCallback(\n      async (id: string) => {\n        const modal = state.get(id);\n        if (modal) {\n          try {\n            //  When unload modal and module load failed, try reload module\n            if (!modal.loaded || modal.loadFailed) {\n              const module = await modal.loader?.();\n              dispatch(ModalActionType.LazyModalLoaded, {\n                loaded: true,\n                loadFailed: false,\n                component: module?.default,\n                id,\n              });\n            }\n          } catch (e) {\n            dispatch(ModalActionType.LazyModalLoaded, {\n              loaded: false,\n              loadFailed: true,\n              id,\n            });\n          }\n        }\n      },\n      [state]\n    );\n\n    const loadModals = useCallback(() => {\n      const keys: string[] = Object.keys(modals);\n\n      for (const key of keys) {\n        dispatch(ModalActionType.AddLazyModal, {\n          id: key,\n          loader: moduleLoader(modals[key]),\n        });\n      }\n    }, [modals]);\n\n    useEffect(() => {\n      loadModals();\n    }, [modals]);\n\n    useEffect(() => {\n      const keys: Array<string> = Array.from(state.keys());\n\n      for (const key of keys) {\n        loadModal(key);\n      }\n    }, [state]);\n\n    return <Component {...props} />;\n  };\n}\n\nexport type RegisterModalsParams = {\n  [key: string]: Importer;\n};\n","import { ModalActionType } from './constants';\nimport { useModalContext } from './context';\nimport { ModalItem } from './reducer';\nimport WrappedModalComponent from './wrapped';\nimport merge from 'lodash/merge';\nimport produce from 'immer';\nimport React, { useMemo, useEffect, ReactElement, cloneElement } from 'react';\n\ntype UseModalParams<T> = {\n  id: string;\n  keepAlive?: boolean;\n  renderIfClosed?: boolean;\n  render?: (props: ModalRenderProps<T>) => any;\n};\n\nexport type ModalBasicProps<T> = {\n  visible: boolean;\n  [key: string]: any;\n};\n\nexport function useModal<T = any>(\n  params: UseModalParams<T> | string\n): [\n  ReactElement,\n  {\n    opened: boolean;\n    open: (props?: T) => void;\n    close: () => void;\n    closeAll: () => void;\n  }\n] {\n  const { dispatch, state, defaultProps } = useModalContext();\n\n  let opened: boolean = false;\n  let props: any = {};\n\n  let id, render, renderIfClosed, keepAlive;\n\n  if (typeof params === 'string') {\n    id = params;\n  } else {\n    id = params.id;\n    keepAlive = params.keepAlive;\n    renderIfClosed = params.renderIfClosed;\n    render = params.render;\n  }\n\n  if (typeof keepAlive === 'undefined') {\n    keepAlive = true;\n  }\n\n  if (renderIfClosed && !keepAlive) {\n    throw new Error(\n      `RHMB: 'keepAlive' should must be true when 'renderIfClosed' is true, not ${keepAlive}, Please check your code`\n    );\n  }\n\n  const modal = useMemo<ModalItem | undefined>(() => state.get(id), [state, id]);\n\n  if (modal) {\n    props = Object.assign({}, modal.props, {\n      visible: modal.opened\n    });\n    props.visible = modal.opened;\n    opened = modal.opened;\n\n    if (modal.isLazy) {\n      keepAlive = true;\n      if (modal.loaded) {\n        render = modal.component;\n      } else {\n        render = () => null;\n      }\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      if (!keepAlive) {\n        dispatch(ModalActionType.RemoveModal, {\n          id,\n        });\n      }\n    };\n  }, [keepAlive, id, dispatch]);\n\n  const open = (props) =>\n    dispatch(ModalActionType.OpenModal, {\n      id,\n      props: merge(props, defaultProps),\n    });\n\n  const close = () => {\n    dispatch(ModalActionType.CloseModal, { id });\n  };\n\n  const closeAll = () => dispatch(ModalActionType.CloseAllModals);\n\n  return [\n    <WrappedModalComponent\n      render={render}\n      modalProps={props}\n      opened={opened}\n      renderIfClosed={renderIfClosed}\n    />,\n    {\n      opened,\n      open,\n      close,\n      closeAll,\n    },\n  ];\n}\n\ntype ModalRenderProps<T> = {\n  [P in keyof T]?: T[P];\n} & ModalItem;\n"],"names":["ModalActionType","initialState","Map","reducer","produce","state","action","payload","payloadId","id","payloadProps","props","loader","component","loadFailed","loaded","allKeys","Array","from","keys","registed","has","currentModal","get","type","OpenModal","opened","Object","assign","set","CloseModal","CloseAllModals","forEach","key","AddLazyModal","isLazy","LazyModalLoaded","ModalContext","createContext","dispatch","defaultProps","displayName","useModalContext","useContext","memo","renderIfClosed","React","render","modalProps","isEqual","runtime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","moduleLoader","importer","children","useReducer","dispatchAction","useCallback","Provider","params","keepAlive","modal","useMemo","visible","useEffect","RemoveModal","WrappedModalComponent","open","merge","close","closeAll","Component","modals","loadModal","loadModals"],"mappings":"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"}