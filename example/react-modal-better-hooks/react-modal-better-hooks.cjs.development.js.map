{"version":3,"file":"react-modal-better-hooks.cjs.development.js","sources":["../../src/constants.ts","../../src/reducer.ts","../../src/components/WrappedModal.tsx","../../src/components/ModalAutoMounter.tsx","../../src/context.tsx","../../src/hooks/useOpenModal.ts","../../src/hooks/useCloseModal.ts","../../src/hooks/useUpdateModal.ts","../../src/hooks/useModalIsLoading.ts","../../src/hooks/useRegisterModal.ts","../../src/index.ts"],"sourcesContent":["export enum ModalActionType {\n  OpenModal = 'OpenModal',\n  UpdateModal = 'UpdateModal',\n  CloseModal = 'CloseModal',\n  CloseAllModals = 'CloseAllModals',\n  RemoveModal = 'RemoveModal',\n  RegisterModal = 'RegisterModal',\n  LazyModalLoaded = 'LazyModalLoaded',\n  LoadLazyModal = 'LoadLazyModal'\n}\n","import { ComponentType } from 'react'\nimport produce from 'immer'\n\nimport { ModalActionType } from './constants'\nimport { Importer, ActionsMap, Actions, ModalItem, ModalStateMap } from './types'\n\nexport const initialState = new Map()\n\nexport const reducer = produce(\n  (state: ModalStateMap, action: Actions): ModalStateMap => {\n    const { id: payloadId, props: payloadProps, loader, component, loadFailed, shouldComponentLoad, loaded, __mergeProps___ } = action.payload ?? {}\n    const allKeys: Array<string> = Array.from(state.keys())\n    const registed: boolean = state.has(payloadId)\n\n    let currentModal: ModalItem | undefined = state.get(payloadId)\n\n    switch (action.type) {\n      case ModalActionType.OpenModal:\n        if (currentModal) {\n          currentModal.visible = true\n          currentModal.props = Object.assign({}, payloadProps ?? {})\n\n          state.set(payloadId, currentModal as ModalItem)\n        }\n\n        return state\n\n      case ModalActionType.UpdateModal:\n        if (currentModal) {\n          let oldPorps = {}\n          if (__mergeProps___) {\n            oldPorps = currentModal.props ?? {}\n          }\n          currentModal.props = Object.assign({}, oldPorps, payloadProps ?? {})\n          state.set(payloadId, currentModal as ModalItem)\n        }\n      return state\n\n      case ModalActionType.CloseModal:\n        console.log(action.type, currentModal)\n\n        if (currentModal) {\n          currentModal.visible = false\n          state.set(payloadId, currentModal)\n        }\n        return state\n\n      case ModalActionType.CloseAllModals:\n        allKeys.forEach((key: string) => {\n          currentModal = state.get(key) as ModalItem\n          currentModal.visible = false\n          state.set(key, currentModal)\n        })\n        return state\n\n      case ModalActionType.RegisterModal:\n        if (!registed) {\n          state.set(payloadId, {\n            ...action.payload,\n            id: payloadId,\n            props: {}\n          } as ModalItem)\n        }\n        return state\n\n      case ModalActionType.RemoveModal:\n        state.delete(payloadId)\n        return state\n\n      case ModalActionType.LoadLazyModal:\n        if (currentModal) {\n          currentModal.loading = true\n          currentModal.loadFailed = false\n        }\n        return state\n\n      case ModalActionType.LazyModalLoaded:\n        if (currentModal) {\n          currentModal.loaded = loaded\n          currentModal.loadFailed = loadFailed\n          currentModal.loading = false\n          currentModal.component = component\n          state.set(payloadId, currentModal as ModalItem)\n        }\n        return state\n\n      default:\n        return state\n    }\n  }\n)\n","import React, { FC, ReactElement } from 'react'\n\ninterface WrappedModalProps {\n  render: any\n  visible: boolean\n  renderProps?: Record<string, any>\n}\n\nexport const WrappedModal: FC<WrappedModalProps> = ({\n  render,\n  visible,\n  renderProps\n}): ReactElement | null => {\n  if (!visible || !render) {\n    return null\n  }\n\n  const props = Object.assign({}, (renderProps ?? {}), { visible })\n  return <>{render(props)}</>\n}\n","import React, { FC, useEffect, useMemo, createElement, ReactElement } from 'react'\n\nimport { useModalContext } from '../context'\nimport { ModalItem } from '../types'\nimport { ModalActionType } from '../constants'\nimport { WrappedModal } from './WrappedModal'\n\nexport const ModalAutoMounter: FC = () => {\n  const { state, dispatch, defaultProps } = useModalContext()\n  const mountableCompnent = useMemo(() => {\n    const entries: IterableIterator<ModalItem> = state.values()\n    const components: ReactElement[] = []\n\n    for (const entry of entries) {\n      if (entry.component) {\n        components.push(createElement(WrappedModal, {\n          ...(defaultProps || {}),\n          render: entry.component,\n          renderProps: entry.props,\n          visible: entry.visible,\n          key: entry.id\n        }))\n      }\n    }\n\n    return components\n  }, [state])\n\n  useEffect(() => {\n    const entries = state.values()\n\n    for (const entry of entries) {\n      if (entry.isLazy && !entry.loaded) {\n        dispatch(ModalActionType.LoadLazyModal, {\n          id: entry.id\n        })\n\n        const loader = entry.loader\n        loader?.().then((instance) => {\n          dispatch(ModalActionType.LazyModalLoaded, {\n            id: entry.id,\n            component: instance.default,\n            loadFailed: false,\n            loaded: true\n          })\n        })\n      }\n    }\n  }, [state])\n\n  return (\n    <>\n      {mountableCompnent}\n    </>\n  )\n}\n\n","import React, {\n  createContext,\n  useReducer,\n  useCallback,\n  useContext,\n  FC,\n  PropsWithChildren,\n} from 'react'\n\nimport {\n  reducer,\n  initialState\n} from './reducer'\nimport {\n  ModalStateMap,\n  Actions,\n  ActionsMap,\n  Dispatcher\n} from './types'\n\nimport { ModalAutoMounter } from './components/ModalAutoMounter'\n\nconst ModalContext = createContext<{\n  state: ModalStateMap\n  dispatch: Dispatcher\n  defaultProps: Record<string, any>\n}>({\n  state: initialState,\n  dispatch: () => undefined,\n  defaultProps: {},\n})\n\nModalContext.displayName = 'RMBH_Context'\n\nexport const ModalProvider: FC<PropsWithChildren<any>> = ({ children, defaultProps = {} }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  //  @ts-ignore\n  const dispatchAction: Dispatcher = useCallback((type, payload) => {\n    dispatch({ type, payload })\n  }, [])\n\n  const value = {\n    state,\n    defaultProps,\n    dispatch: dispatchAction,\n  }\n\n  return (\n    <ModalContext.Provider value={value}>\n      <>\n        <ModalAutoMounter />\n        {children}\n      </>\n    </ModalContext.Provider>\n  )\n}\n\nexport const useModalContext = (): {\n  state: ModalStateMap\n  dispatch: Dispatcher\n  defaultProps: Record<string, any>\n} => useContext(ModalContext)\n","import React, { useState } from 'react'\n\nimport { ModalActionType } from '../constants'\nimport { useModalContext } from '../context'\nimport { ModalItem } from '../types'\nimport { WrappedModalComponent } from '../wrapped'\n\ninterface OpenModalInput<T> {\n  readonly modalId: string\n  readonly props?: T\n}\n\ntype UseOpenModalReturn<T> = (params: OpenModalInput<T>) => void | undefined\n\nexport const useOpenModal = <T>(): UseOpenModalReturn<T> => {\n  const [ loading, setLoading ] = useState<boolean>(false)\n  const { state, dispatch, defaultProps } = useModalContext()\n\n  const open = ({ modalId, props }: OpenModalInput<T>): void | undefined => {\n    const modalItem = state.get(modalId)\n\n    if (modalItem?.isLazy && !modalItem?.loaded && !modalItem.loading) {\n      const loader = modalItem.loader\n      dispatch(ModalActionType.LoadLazyModal, {\n        id: modalId\n      })\n\n      loader?.().then((instance) => {\n        dispatch(ModalActionType.LazyModalLoaded, {\n          id: modalItem.id,\n          component: instance.default,\n          loadFailed: false,\n          loaded: true\n        })\n\n        setTimeout(() => {\n          dispatch(ModalActionType.OpenModal, {\n            id: modalId,\n            props\n          })\n        }, 30)\n      })\n      return\n    }\n\n    dispatch(ModalActionType.OpenModal, {\n      id: modalId,\n      props\n    })\n  }\n\n  return open\n}","import { ModalActionType } from '../constants'\nimport { useModalContext } from '../context'\n\ninterface UseCloseModalReutrn {\n  closeModal(id: string): void\n  closeAllModals(): void\n}\n\nexport const useCloseModal = (): UseCloseModalReutrn => {\n  const { dispatch } = useModalContext()\n\n  const closeModal = (id: string) => dispatch(ModalActionType.CloseModal, { id })\n  const closeAllModals = () => dispatch(ModalActionType.CloseAllModals)\n\n  return {\n    closeModal,\n    closeAllModals\n  }\n}","import React, { useCallback } from 'react'\n\nimport { ModalActionType } from '../constants'\nimport { useModalContext } from '../context'\nimport { ModalItem } from '../types'\n\ninterface UpdateModalInput<T> {\n  readonly modalId: string\n  readonly props?: T\n  readonly merge?: boolean\n}\n\ntype UseUpdateModalReturn<T> = (params: UpdateModalInput<T>) => void\n\nexport const useUpdateModal = <T>(): UseUpdateModalReturn<T> => {\n  const { state, dispatch } = useModalContext()\n\n  const update = useCallback(({ modalId, merge, props }: UpdateModalInput<T>): void => {\n    const modalItem = state.get(modalId)\n\n    dispatch(ModalActionType.UpdateModal, {\n      id: modalId,\n      props: (props as T)!,\n      __mergeProps___: merge\n    })\n  }, [state])\n\n  return update\n}","import { useMemo, useState } from 'react'\n\nimport { useModalContext } from '../context'\n\nexport const useModalIsLoading = (modalIds: string | string[]): boolean => {\n  const { state } = useModalContext()\n  return useMemo<boolean>(() => {\n    const ids: string[] = Array.isArray(modalIds) ? modalIds : [modalIds]\n    const modals = ids.map((id: string) => state.get(id)).filter(Boolean)\n\n    if (!modals.length) {\n      return false\n    }\n\n    return modals.some((modal) => modal?.isLazy ? modal.loading : false)\n  }, [state, modalIds])\n}","import React, { ComponentType, useEffect, useMemo, useRef } from 'react'\n\nimport { useModalContext } from '../context'\nimport { Importer } from '../types'\nimport { ModalActionType } from '../constants'\n\ninterface ModalRegisterItem {\n  readonly isLazy?: boolean\n  readonly component?: ComponentType\n  readonly loader?: Importer\n}\n\ntype RegisterModalInput = Record<string, ModalRegisterItem>\n\ntype UseRegisterModalReturn = (modals: RegisterModalInput, isGlobal?: boolean) => void\n\nexport const useRegisterModal = (): UseRegisterModalReturn => {\n  const register = (modals: RegisterModalInput, isGlobal?: boolean): void => {\n    const { dispatch, state } = useModalContext()\n    const mountRef = useRef<boolean>(false)\n\n    const diffModals = useMemo(() => {\n      return Object.keys(modals).reduce((result: RegisterModalInput, modalId: string) => {\n        if (state.get(modalId)) {\n          return result\n        }\n        \n        return {\n          ...result,\n          [modalId]: modals[modalId]\n        }\n      }, {})\n    }, [modals, state])\n\n    useEffect(() => {\n      Object.keys(diffModals).forEach((modalId: string) => {\n        const registerItem = diffModals[modalId]\n\n        const modalItem: Record<string, any> = {\n          id: modalId,\n          isLazy: registerItem.isLazy,\n          component: registerItem.component,\n          loader: registerItem.loader\n        }\n\n        if (modalItem.isLazy) {\n          modalItem.loaded = false\n          modalItem.loading = false\n          modalItem.loadFailed = false\n        }\n\n        dispatch(ModalActionType.RegisterModal, modalItem)\n      })\n    }, [diffModals])\n\n    useEffect(() => {\n      if (!mountRef.current) {\n        mountRef.current = true\n      }\n\n      return () => {\n        if (!isGlobal && mountRef.current) {\n          Object.keys(modals).forEach((id) => {\n            dispatch(ModalActionType.RemoveModal, { id })\n          })\n        }\n      }\n    }, [modals, isGlobal])\n  }\n\n  return register\n}\n","import { enableAllPlugins } from 'immer'\n\nenableAllPlugins()\n\nexport { ModalProvider } from './context'\n\nexport { useOpenModal } from './hooks/useOpenModal'\nexport { useCloseModal } from './hooks/useCloseModal'\nexport { useUpdateModal } from './hooks/useUpdateModal'\nexport { useModalIsLoading } from './hooks/useModalIsLoading'\nexport { useRegisterModal } from './hooks/useRegisterModal'\n\nexport { ModalBasicProps } from './types'\n"],"names":["ModalActionType","initialState","Map","reducer","produce","state","action","payload","payloadId","id","payloadProps","props","loader","component","loadFailed","shouldComponentLoad","loaded","__mergeProps___","allKeys","Array","from","keys","registed","has","currentModal","get","type","OpenModal","visible","Object","assign","set","UpdateModal","oldPorps","CloseModal","console","log","CloseAllModals","forEach","key","RegisterModal","RemoveModal","LoadLazyModal","loading","LazyModalLoaded","WrappedModal","render","renderProps","React","ModalAutoMounter","useModalContext","dispatch","defaultProps","mountableCompnent","useMemo","entries","values","components","entry","push","createElement","useEffect","isLazy","then","instance","ModalContext","createContext","undefined","displayName","ModalProvider","children","useReducer","dispatchAction","useCallback","value","Provider","useContext","useOpenModal","useState","open","modalId","modalItem","setTimeout","useCloseModal","closeModal","closeAllModals","useUpdateModal","update","merge","useModalIsLoading","modalIds","ids","isArray","modals","map","filter","Boolean","length","some","modal","useRegisterModal","register","isGlobal","mountRef","useRef","diffModals","reduce","result","registerItem","current","enableAllPlugins"],"mappings":"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"}